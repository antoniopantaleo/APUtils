{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Collection extensions provide useful methods to simplify indexes access, perform common operations and provide useful utilities"}]},{"anchor":"Methods","level":3,"type":"heading","text":"Methods"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Count all occurences of a certain item in a collection with "},{"type":"codeVoice","code":"occurences(of:)"}]},{"type":"codeListing","syntax":"swift","code":["let collection = [\"Jim\", \"Kevin\", \"Dwight\", \"Dwight\", \"Kevin\", \"Kevin\"]","","collection.occurences(of: \"Jim\") \/\/ returns 1","collection.occurences(of: \"Dwight\") \/\/ returns 2","collection.occurences(of: \"Kevin\") \/\/ returns 3","collection.occurences(of: \"Creed\") \/\/ returns 0"]},{"type":"paragraph","inlineContent":[{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can make interception between sets to retrieve the common elements between them with "},{"type":"codeVoice","code":"intercection(_ sequence:)"}]},{"type":"codeListing","syntax":"swift","code":["let setA: Set<String> = [\"Foo\", \"Bar\"]","let setB: Set<String> = [\"Bar\", \"Baz\"]","","let interception = setA.interception(setB) \/\/ returns [\"Bar\"]"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can concatenate two sequences in a new one"}]},{"type":"codeListing","syntax":"swift","code":["let collectionOne = [\"Jim\", \"Kevin\", \"Pam\", \"Dwight\"]","let collectionTwo = [\"Angela\", \"Oscar\"]","","let newCollection = collectionOne.concatenate(with: collectionTwo) \/\/ [\"Jim\", \"Kevin\", \"Pam\", \"Dwight\", \"Angela\", \"Oscar\"] "]},{"type":"paragraph","inlineContent":[{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you use "},{"type":"codeVoice","code":"Combine"},{"type":"text","text":", you can merge multiple Publishers into a single one and handles all the events in a single closure with "},{"type":"codeVoice","code":"mergeToAnyPublisher"}]},{"type":"codeListing","syntax":"swift","code":["let publisher1 = Just(1)","let publisher2 = Just(2)","let publisher3 = Just(3)","","[publisher1, publisher2, publisher3]","  .mergeToAnyPublisher()","  .receive(on: RunLoop.main)","  .sink { number in","      \/\/ logic here","  }","  .store(in: &cancellables)"]},{"anchor":"Subscripts","level":3,"type":"heading","text":"Subscripts"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can "},{"type":"emphasis","inlineContent":[{"type":"text","text":"safely"}]},{"type":"text","text":" access to an index with "},{"type":"codeVoice","code":"[safe:]"},{"type":"text","text":" subscript"}]},{"type":"codeListing","syntax":"swift","code":["let collection = [1,2,3]","","collection[safe: 0] \/\/ returns 1","collection[safe: 3] \/\/ returns nil"]},{"type":"paragraph","inlineContent":[{"type":"text","text":" "}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can "},{"type":"emphasis","inlineContent":[{"type":"text","text":"safely"}]},{"type":"text","text":" access to an index and fallback to a default value with "},{"type":"codeVoice","code":"[_, default:]"},{"type":"text","text":" subscript"}]},{"type":"codeListing","syntax":"swift","code":["let collection = [\"Foo\", \"Bar\"]","","collection[0, default: \"Baz\"] \/\/ returns \"Foo\"","collection[2, default: \"Baz\"] \/\/ returns \"Baz\""]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/aputils\/collection"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/APUtils\/documentation\/APUtils\/Collection","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Give superpowers to Arrays, Sets and Dictionaries"}],"kind":"article","metadata":{"roleHeading":"Article","title":"Collection","role":"article","modules":[{"name":"APUtils"}]},"hierarchy":{"paths":[["doc:\/\/APUtils\/documentation\/APUtils"]]},"seeAlsoSections":[{"title":"Extensions","identifiers":["doc:\/\/APUtils\/documentation\/APUtils\/Codable","doc:\/\/APUtils\/documentation\/APUtils\/Optional","doc:\/\/APUtils\/documentation\/APUtils\/String","doc:\/\/APUtils\/documentation\/APUtils\/UIView","doc:\/\/APUtils\/documentation\/APUtils\/Regex"],"generated":true}],"references":{"doc://APUtils/documentation/APUtils/Regex":{"role":"article","title":"Regex","abstract":[{"type":"text","text":"Regular expression convenient methods"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils\/Regex","kind":"article","type":"topic","url":"\/documentation\/aputils\/regex"},"doc://APUtils/documentation/APUtils/Codable":{"role":"article","title":"Codable","abstract":[{"type":"text","text":"Simplify the way to encode and decode objects"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils\/Codable","kind":"article","type":"topic","url":"\/documentation\/aputils\/codable"},"doc://APUtils/documentation/APUtils/String":{"role":"article","title":"String","abstract":[{"type":"text","text":"Evergreen string utils"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils\/String","kind":"article","type":"topic","url":"\/documentation\/aputils\/string"},"doc://APUtils/documentation/APUtils/Optional":{"role":"article","title":"Optional","abstract":[{"type":"text","text":"Easy ways to deal with optionals"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils\/Optional","kind":"article","type":"topic","url":"\/documentation\/aputils\/optional"},"doc://APUtils/documentation/APUtils":{"role":"collection","title":"APUtils","abstract":[{"type":"text","text":"A collection of everyday helpers"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils","kind":"symbol","type":"topic","url":"\/documentation\/aputils"},"doc://APUtils/documentation/APUtils/UIView":{"role":"article","title":"UIView","abstract":[{"type":"text","text":"UIViews simplified"}],"identifier":"doc:\/\/APUtils\/documentation\/APUtils\/UIView","kind":"article","type":"topic","url":"\/documentation\/aputils\/uiview"}}}